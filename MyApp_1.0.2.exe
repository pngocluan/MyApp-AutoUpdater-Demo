using System;
using System.Net;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;

class Program
{
    static async Task Main()
    {
        string currentVersion = "1.0.0";
        string versionUrl = "https://www.dropbox.com/scl/fi/h8sifu5ibup4n73njmkor/version.txt";
        string downloadUrl = "https://www.dropbox.com/scl/fi/256k4nz9v0ut8lwodalzd/MyApp_1.0.2.exe";
        string tempFile = Path.Combine(Path.GetTempPath(), "MyApp_New.exe");

        try
        {
            using (var client = new WebClient())
            {
                string latestVersion = (await client.DownloadStringTaskAsync(versionUrl)).Trim();

                if (new Version(latestVersion).CompareTo(new Version(currentVersion)) > 0)
                {
                    Console.WriteLine($"üîî C√≥ b·∫£n c·∫≠p nh·∫≠t m·ªõi: {latestVersion}");
                    Console.WriteLine("‚¨áÔ∏è ƒêang t·∫£i b·∫£n m·ªõi...");

                    await client.DownloadFileTaskAsync(downloadUrl, tempFile);

                    Console.WriteLine("‚úÖ T·∫£i xong! ƒêang kh·ªüi ch·∫°y phi√™n b·∫£n m·ªõi...");

                    Process.Start(new ProcessStartInfo(tempFile)
                    {
                        UseShellExecute = true
                    });

                    Environment.Exit(0); // ƒê√≥ng ·ª©ng d·ª•ng hi·ªán t·∫°i
                }
                else
                {
                    Console.WriteLine("‚úÖ B·∫°n ƒëang d√πng phi√™n b·∫£n m·ªõi nh·∫•t.");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("‚ùå L·ªói khi ki·ªÉm tra c·∫≠p nh·∫≠t: " + ex.Message);
        }
    }
}
